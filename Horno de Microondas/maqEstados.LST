C51 COMPILER V8.18   MAQESTADOS                                                            06/28/2011 21:15:54 PAGE 1   


C51 COMPILER V8.18, COMPILATION OF MODULE MAQESTADOS
NO OBJECT MODULE REQUESTED
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE maqEstados.c BROWSE DEBUG OBJECTEXTEND

line level    source

*** WARNING C500 IN LINE 1 OF MAQESTADOS.C: SERIAL NUMBER EXPIRED
   1          //*********************************************************************
   2          // maqEstados.C
   3          //*********************************************************************
   4          /////////////////////////// NO MODIFICAR //////////////////////////////
   5          #include <reg52.h>
   6          #include <stdio.h>
   7          
   8          //----- Definiciones generales
   9          #define SI              1
  10          #define NO              0
  11          #define ABIERTA 0
  12          #define CERRADA 1
  13          
  14          //----- Posibles estados del horno microondas
  15          #define REPOSO                                  100
  16          #define PROGRAMANDO_POTENCIA    101
  17          #define PROGRAMANDO_TIEMPO              102
  18          #define COCINANDO                               103
  19          
  20          
  21          code char mensaje1[] = "Ingrese potencia [1-5]";
  22          code char mensaje2[] = "Ingrese tiempo [mmss]";
  23          code char mensaje3[] = "Cocinando...";
  24          code char mensaje4[] = "Cocción finalizada";
  25          code char mensaje5[] = "Cocción interrumpida, cancelación";
  26          code char mensaje6[] = "Cocción interrumpida, puerta abierta";
  27          
  28          void InitMaqEstados( void );
  29          void MaqEstados( char );
  30          bit Puerta( void );
  31          void ControlPWM( char );
  32          void Luz( bit b );
  33          unsigned int ConvierteTiempo( char *p );
  34          
  35          char estado;
  36          unsigned char potencia;
  37          unsigned int  tiempoCoccion;
  38          static int cuento;
  39          static unsigned char ctiempo[5];
  40          /////////////////////////// FIN NO MODIFICAR //////////////////////////
  41          
  42          /* (1) COMPLETAR las siguiente declaraciones para PWM, LUZ y PUERTA */
  43          sbit PWM=P0^0;
  44          sbit LUZ=P0^1;
  45          sbit PUERTA=P0^7;
  46          
  47          
  48          /*---[ MaqEstados() ]--------------------------------------------------
  49          */
  50          void MaqEstados( char input )
  51          {
  52   1       static char ctiempo[5];
  53   1       static int cuento;
  54   1      
C51 COMPILER V8.18   MAQESTADOS                                                            06/28/2011 21:15:54 PAGE 2   

  55   1              /* (2) COMPLETAR */     
  56   1      
  57   1              switch(estado)
  58   1              {
  59   2                case REPOSO:
  60   2                              if(input=='P'){
  61   3                                      estado=PROGRAMANDO_POTENCIA;}
  62   2                              if(input=='T'){
  63   3                                      estado=PROGRAMANDO_TIEMPO;
  64   3                                      cuento=0;}
  65   2                              if(input=='I'){
  66   3                                      estado=COCINANDO;}
  67   2                              if(input=='C'){
  68   3                                      estado=REPOSO;
  69   3                                      //potencia=0;
  70   3                                      Luz(NO);}
  71   2                 break;
  72   2                 
  73   2      
  74   2            case PROGRAMANDO_POTENCIA:
  75   2                              printf("%s",mensaje1);
  76   2                              if(input=='C'){
  77   3                                estado=REPOSO;
  78   3                                }
  79   2                              else
  80   2                              {
  81   3                                potencia=input;
  82   3                                estado=REPOSO;}
  83   2                      break;
  84   2      
  85   2                case PROGRAMANDO_TIEMPO:
  86   2                              printf("%",mensaje2);
  87   2                              if(input=='C'){
  88   3                                estado=REPOSO;}
  89   2                              else
  90   2                                cuento++;
  91   2                                if(cuento==5){
  92   3                                  ctiempo[cuento]='\0';
  93   3                                      tiempoCoccion=ConvierteTiempo(&ctiempo);
  94   3                                      estado=REPOSO;
  95   3                                      }
  96   2                                else
  97   2                                {
  98   3                                      ctiempo[cuento]=input;}
  99   2                      break;
 100   2      
 101   2                case COCINANDO:
 102   2                              
 103   2                              if(input=='C'){
 104   3                                estado=REPOSO;
 105   3                                printf("%s",mensaje5); }
 106   2                              else                    
 107   2                                if(PUERTA){
 108   3                                      ControlPWM(potencia);
 109   3                                      printf("%s",mensaje3);
 110   3                                      Luz(SI);
 111   3                                      }
 112   2                                else
 113   2                                {
 114   3                                  printf("%s",mensaje6);
 115   3                                      estado=REPOSO;
 116   3                                      Luz(SI);}
C51 COMPILER V8.18   MAQESTADOS                                                            06/28/2011 21:15:54 PAGE 3   

 117   2                              
 118   2      
 119   2                              if(tiempoCoccion==0){
 120   3                                      printf("%s",mensaje4);
 121   3                                      estado=REPOSO;
 122   3                                      Luz(NO);}
 123   2                                      
 124   2                      break;
 125   2               }
 126   1              }
 127          /*---[ InitMaqEstados() ]--------------NO MODIFICAR--------------------
 128          */
 129          void InitMaqEstados( void )
 130          {
 131   1              estado = REPOSO;
 132   1              potencia = 5;
 133   1              tiempoCoccion = 60;
 134   1              ControlPWM( NO );
 135   1              Luz(NO);
 136   1      }
 137          
 138          /*---[ ControlPWM() ]------------------NO MODIFICAR--------------------
 139          ** Realiza el control de PWM
 140          ** (ESTA FUNCIÓN ES FICTICIA SOLO INTERESA LA INDICACION EN LA SALIDA)
 141          ** Recibe:              nivel de potencia de cocción
 142          ** Devuelve:    nada
 143          */
 144          void ControlPWM( char w )
 145          {
 146   1              if( w == 0 )
 147   1                      PWM = 0;
 148   1              else
 149   1                      PWM = 1;
 150   1      }
 151          
 152          /*---[ ConvierteTiempo() ]---------------------------------------------
 153          ** Convierte el arreglo (cadena de caracteres ASCII) recibida como
 154          ** argumento, en un valor entero que representa el tiempo de cocción
 155          ** (expresado en tics de 100 ms)
 156          ** Recibe:              puntero a la cadena a convertir, formato de la cadena:
 157          **                              mmss'\0'. Ejemplo '1''5''3''0''\0' representa 15 m 30 s
 158          ** Devuelve:    valor entero del tiempo de cocción expresado en tic de
 159          **                              100 ms. Para el ejemplo anterior devuelve: 9300 
 160          */
 161          unsigned int ConvierteTiempo( char *p )
 162          {
 163   1              /* (3) COMPLETAR */
 164   1              unsigned int minutos,segundos,ttotal;
 165   1      
 166   1              minutos=(p[0]-48)*10;             // Ejemplo, convierto el 1 cadena a decena 10
 167   1              minutos=minutos + (p[1]-48);      // convierto la unidad 5 cadena a unidad y sumo 10+5 ahora es int
 168   1              segundos=(p[2]-48)*10;            // convierto decena cadena de segundos a decena int 30
 169   1              segundos=segundos + (p[3]-48); //convierto unidad cadena a unidad int y lo sumo a la decena int
 170   1          ttotal=((minutos*60)+segundos)*10;
 171   1      
 172   1              return ttotal;
 173   1      
 174   1      }
 175          
 176          /*---[ Puerta() ]------------------------------------------------------
 177          ** Consulta el estado del interruptor adosado a la puerta
 178          ** Recibe:              nada
C51 COMPILER V8.18   MAQESTADOS                                                            06/28/2011 21:15:54 PAGE 4   

 179          ** Devuelve:    estado de la puerta (ABIERTA/CERRADA) 
 180          */
 181          bit Puerta( void )
 182          {
 183   1      static bit estadoPuerta;
 184   1      
 185   1              if(PUERTA)
 186   1                estadoPuerta=CERRADA;
 187   1              else
 188   1                estadoPuerta=ABIERTA;
 189   1      
 190   1              return estadoPuerta;
 191   1              /* (4) COMPLETAR */
 192   1      }
 193          
 194          /*---[ Luz() ]--------------------------------------------------
 195          ** Enciende/apaga la luz del interior del horno
 196          ** Recibe:              acción que se realiza (encender/apagar)
 197          ** Devuelve:    nada
 198          */
 199          void Luz( bit b )
 200          
 201          {
 202   1              /* (5) COMPLETAR */
 203   1              if(b==1)
 204   1                LUZ=1;
 205   1              else      
 206   1                LUZ=0;
 207   1      }
 208          
 209          /////////////////////////////////////////////////////////////////////// 
 210          //  Si necesita definir nuevas funciones, hacerlo a partir de aqui   //
 211          ///////////////////////////////////////////////////////////////////////


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    471    ----
   CONSTANT SIZE    =    153    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
